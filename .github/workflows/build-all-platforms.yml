name: Build All Platforms

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: windows
            artifact-name: windows-x64
          # macOS Intel
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: macos
            artifact-name: macos-x64
          # macOS Apple Silicon
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: macos
            artifact-name: macos-arm64
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux
            artifact-name: linux-x64
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Install system dependencies (Linux only)
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        # Try newer webkit package first, fallback to older version
        sudo apt-get install -y libgtk-3-dev libappindicator3-dev librsvg2-dev patchelf libssl-dev
        sudo apt-get install -y libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev
        
    - name: Install macOS dependencies
      if: matrix.platform == 'macos'
      run: |
        # Install create-dmg for DMG creation
        npm install -g create-dmg || true
        
    - name: Install Tauri CLI
      run: |
        echo "Installing Tauri CLI via cargo..."
        cargo install tauri-cli --version ^2.0
        echo "Tauri CLI installed, checking version..."
        if [ "${{ matrix.platform }}" = "windows" ]; then
          powershell -Command '$env:PATH += ";$env:USERPROFILE\.cargo\bin"; cargo tauri --version'
        else
          export PATH="$HOME/.cargo/bin:$PATH"
          cargo tauri --version
        fi
      
    - name: Install frontend dependencies
      run: |
        cd web
        npm ci
        
    - name: Build frontend
      run: |
        cd web
        npm run build
        
    - name: Build installer (Windows)
      if: matrix.platform == 'windows'
      run: |
        $env:PATH += ";$env:USERPROFILE\.cargo\bin"
        cargo tauri build --target ${{ matrix.target }}
      shell: pwsh
        
    - name: Build installer (Unix)
      if: matrix.platform != 'windows'
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        chmod +x "$HOME/.cargo/bin/tauri" || true
        cargo tauri build --target ${{ matrix.target }}
        
    - name: List build outputs
      run: |
        echo "=== Build output structure ==="
        find src-tauri/target -name "*.dmg" -o -name "*.app" -o -name "*.msi" -o -name "*.exe" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.rpm" | head -20
        echo "=== Bundle directory contents ==="
        ls -la src-tauri/target/${{ matrix.target }}/release/bundle/ || echo "Bundle directory not found"
        echo "=== Release directory contents ==="
        ls -la src-tauri/target/${{ matrix.target }}/release/ || echo "Release directory not found"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: |
          src-tauri/target/${{ matrix.target }}/release/bundle/**/*
          src-tauri/target/${{ matrix.target }}/release/*.exe
          src-tauri/target/${{ matrix.target }}/release/*.dmg
          src-tauri/target/${{ matrix.target }}/release/*.msi
          src-tauri/target/${{ matrix.target }}/release/*.AppImage
          src-tauri/target/${{ matrix.target }}/release/*.deb
          src-tauri/target/${{ matrix.target }}/release/*.rpm
        retention-days: 30
